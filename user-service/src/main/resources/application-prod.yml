spring:
  application:
    name: "user-service"
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 10
      minimum-idle: 2
      pool-name: HikariPool-UserService
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      validation-timeout: 3000
      initialization-fail-timeout: 60000
      connection-init-sql: SELECT 1
      data-source-properties:
        ssl: false
        sslmode: disable
        tcpKeepAlive: true
        applicationName: user-service
        logUnclosedConnections: true
        connectionTimeout: 30000
        socketTimeout: 60000
        connectTimeout: 30000
        reWriteBatchedInserts: true
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        failOnReadOnly: false
        readOnly: false
        allowMultiQueries: true
        useUnicode: true
        characterEncoding: UTF-8
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    open-in-view: false
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
          batch_size: 20
          fetch_size: 20
        connection:
          provider_disables_autocommit: true
          autocommit: false
          validation:
            mode: auto
            query: SELECT 1
            timeout: 3000
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  sql:
    init:
      mode: never
      schema-locations: classpath:db/schema.sql
      data-locations: classpath:db/data.sql
      continue-on-error: true
      platform: postgresql
      encoding: UTF-8

server:
  port: 8081

eureka:
  instance:
    preferIpAddress: false
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}
    registry-fetch-interval-seconds: 30
    eureka-server-connect-timeout-seconds: 30
    eureka-server-read-timeout-seconds: 30
    initial-instance-info-replication-interval-seconds: 40
    instance-info-replication-interval-seconds: 30
    eureka-connection-idle-timeout-seconds: 30

jwt:
  secret: ${JWT_SECRET:16f7e412ee66030c3bf769281a076955f595be7479189c4e5ab1f90d2ae3c82e0c5170afcceba1e0f638648c01a468ff82b0723a970011f7fc0dd1a4ba70b0e1}

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    config-url: /api-docs/swagger-config
    url: /api-docs
    servers:
      - url: https://ijaa-user-service.onrender.com
        description: Production Server
  servers:
    - url: https://ijaa-user-service.onrender.com
      description: Production Server
  packages-to-scan: com.ijaa.user.presenter.rest.api

# Management endpoints for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging configuration for debugging
logging:
  level:
    com.ijaa.user: DEBUG
    org.springframework.orm.jpa: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.zaxxer.hikari: DEBUG
    org.springframework.jdbc: DEBUG
